#############################################
#Section one: collecting and processing data#
#############################################

    ############
    ##Path One##
    ############
    #If you want to build an up-to-date Pseudomonas expression compendium, you can download datasets and process them as follows:

    #Download pseudonomas datasets from ArrayExpress
    mkdir -p Data_collection_processing/data/zips
    #For mac users, you need to install wget first or use curl instead
    for x in `python Data_collection_processing/get_pseudo.py`; do wget -N -P Data_collection_processing/data/zips/ $x ; done   

    #Unzip samples in all datasets into one folder and also unzip samples in one dataset into individual folders.
    mkdir -p Data_collection_processing/data/cels/all-pseudomonas
    for x in Data_collection_processing/data/zips/*; do unzip -n $x -d Data_collection_processing/data/cels/all-pseudomonas; done
    for x in Data_collection_processing/data/zips/*; do mkdir -p Data_collection_processing/data/cels/`basename -s .raw.1.zip $x`; unzip -n $x -d Data_collection_processing/data/cels/`basename -s .raw.1.zip $x`; done    

    #Process each dataset into pcl file. Also process samples in all datasets into one expression compendium.
    mkdir -p Data_collection_processing/data/pcls/
    #The following code requires installing R packages from Bioconductor: affy, affyio, AnnotationDbi, paeg1acdf
    for x in Data_collection_processing/data/cels/*; do R --no-save --args $x Data_collection_processing/data/pcls/`basename $x`.pcl < Data_collection_processing/ProcessToPCL.R; done

    #Create a file to store all datasets names and their sample names
    python Data_collection_processing/create_dataset_list.py

    #Remove controls and only keep genes starting with PA. The first argument takes input file (combined expression compendium) and second argument specifies output file.
    python Data_collection_processing/remove_control.py Data_collection_processing/data/pcls/all-pseudomonas.pcl Data_collection_processing/Pa_compendium.pcl

    #Process test sets that are not included in the expression compendium. Let's use the genome hybridization test set and Anr test set as examples. You can also provide your own dataset here.
    R --no-save --args Data_collection_processing/test_sets/Genome-hybs < Data_collection_processing/process_test_set.R 
    R --no-save --args Data_collection_processing/test_sets/Anr < Data_collection_processing/process_test_set.R 
    
    #Remove controls and only keep genes in the test set
    python Data_collection_processing/remove_control.py Data_collection_processing/test_sets/Genome-hybs.pcl Data_collection_processing/Genome-hybs-gene.pcl
    python Data_collection_processing/remove_control.py Data_collection_processing/test_sets/Anr.pcl Data_collection_processing/Anr-gene.pcl

    ##########################
    # process RNAseq testset #
    ##########################
    #convert gene names to PA IDs
    python Data_collection_processing/genename_to_PAid.py Data_collection_processing/test_sets/Anr-RNAseq/GSE68534_Processed_PAO1.txt Data_collection_processing/test_sets/Anr-RNAseq/GSE68534_Processed_PAO1_renamed.txt
    python Data_collection_processing/genename_to_PAid.py Data_collection_processing/test_sets/Anr-RNAseq/GSE68534_Processed_J215.txt Data_collection_processing/test_sets/Anr-RNAseq/GSE68534_Processed_J215_renamed.txt
    #process RNAseq data using tdm r package
    Rscript Data_collection_processing/process_rnaseq_testset.R Data_collection_processing/test_sets/Anr-RNAseq/GSE68534_Processed_PAO1_renamed.txt Data_collection_processing/Pa_compendium.pcl Data_collection_processing/Anr_RNAseq_PAO1_gene.pcl
    Rscript Data_collection_processing/process_rnaseq_testset.R Data_collection_processing/test_sets/Anr-RNAseq/GSE68534_Processed_J215_renamed.txt Data_collection_processing/Pa_compendium.pcl Data_collection_processing/Anr_RNAseq_J215_gene.pcl
